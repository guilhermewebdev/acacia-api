stages:
  - test
  - deploy

test:
  image: python:3
  variables:
    DB: $DB
    DB_HOST: $DB_HOST
    DB_PASS: $DB_HOST
    DB_PORT: $DB_PORT
    DB_USER: $DB_USER
    SECRET_KEY: $SECRET_KEY
  before_script:
    - pip install -r requirements.txt
  script:
    - python manage.py test

staging:
  stage: deploy
  image: ubuntu
  variables:
    HEROKU_API_KEY: $HEROKU_API_KEY
    DB: $DB
    DB_HOST: $DB_HOST
    DB_PASS: $DB_HOST
    DB_PORT: $DB_PORT
    DB_USER: $DB_USER
    SECRET_KEY: $SECRET_KEY
  before_script:
    - apt-get update -y
    - apt-get install curl -y
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update -y
    - DEBIAN_FRONTEND="noninteractive" apt-get install -y ruby-dev git nodejs yarn npm
    - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - gem install dpl
  script:
    - dpl --provider=heroku --app=acacia-health-care-staging --api-key=$HEROKU_API_KEY
    - heroku run python manage.py migrate
  only:
    - master

production:
  stage: deploy
  image: ubuntu
  variables:
    HEROKU_API_KEY: $HEROKU_API_KEY
    DB: $DB
    DB_HOST: $DB_HOST
    DB_PASS: $DB_HOST
    DB_PORT: $DB_PORT
    DB_USER: $DB_USER
    SECRET_KEY: $SECRET_KEY
  before_script:
    - apt-get update -y
    - apt-get install curl -y
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update -y
    - DEBIAN_FRONTEND="noninteractive" apt-get install -y ruby-dev git nodejs yarn npm
    - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - gem install dpl
  script:
    - dpl --provider=heroku --app=acacia-health-care --api-key=$HEROKU_API_KEY
    - heroku run python manage.py migrate
  only:
    - master
